* slang
** pre-requirements
- `llvm`, `brew install llvm-hs/llvm/llvm-8`. this project use llvm as compiler backend. 
- `stack`, to setup ghc, downloads all dependencies, build the compiler, etc.

** the compile process 

**.sl -> haskell-ast -> llvm ir -> all the format llvm supports

** step one
- [X] finish simple s-expression parser
- [X] add arithmetic(such as `+`, `-`, `*`, `/`) support
  - run `/usr/local/Cellar/llvm-8/8.0.0/bin/lli-8 ./sl-data/test.ll` to see the return code...
  - use printf to show result of top level instuctions
- [X] compile to llvm

** step two
- [ ] add top level function define
- [ ] add more primitive functions 
  - export from stdio/libc

** step three
- [ ] add control flow

** step four
- [ ] experiment `type` system and other fantastical possibilities
- [ ] runtime system
- [ ] lock, thread, so on...

** step five
- [ ] gc...  :: seems a long way to me
